Introduction to Prolog Programming

39.climb(X,_,Y,_),female(Y).

40. climb('High n Dry',_,_,Date1), climb(X,_,_,Date2), later(Date1,Date2).

43. 

is_a_list(). evaluates if there's an empty list at the tail.
is_a_list(.(a,[])). is true because the tail is an empty list.
is_a_list(.(a,b)). is false because the tail is not an empty list.
is_a_list(.(a,.(b,[]))). is true because the tail has an empty list.
is_a_list(a). is false because the tail is not an empty list.

44.

is_a_list([]).
is_a_list(.(Head,Tail)):-
        is_a_list(Tail).


%head_tail
head_tail(List,Head, Tail):-
        is_a_list(List),
        [Head|Tail] = List.

46.% base case
 12 is_member(Element, list(Element, _)).
 13 
 14 % recursive case (to be completed!)
 15 is_member(Element, list(_, Tail1))   :-
 16         
 17         is_member(Element, Tail1).

47. prints out the values of x that allows the function/rule to evaluate to True.

48. 
